#
# @lc app=leetcode id=928 lang=python3
#
# [928] Minimize Malware Spread II
#

# @lc code=start
class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        adj_dict = defaultdict(list)
        n = len(graph)
        for i in range(n):
            for j in range(n):
                if i == j: continue 
                if graph[i][j] == 0: continue
                adj_dict[i].append(j)
                adj_dict[j].append(i)

        queue = deque()
        initial = set(initial)
        for i in initial:
            queue.append((i, i))

        source = [set() for _ in range(n)]

        while queue:
            curr, src = queue.popleft()
            if src in source[curr]: continue
            source[curr].add(src)
            for nxt in adj_dict[curr]:
                if nxt in initial: continue 
                queue.append((nxt, src))

        #print(source)
        M = inf
        ans = None
        for s in sorted(initial):
            count = 0
            for i in range(n):
                if i not in initial:
                    if s in source[i] and len(source[i]) >= 2:
                        count += 1
                    if s not in source[i] and len(source[i]) > 0:
                        count += 1
            if M > count:
                M = count 
                ans = s
        return ans

        





# @lc code=end

